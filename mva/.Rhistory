source('~/Documents/mva/runner.R')
setData("poly")
mvas <- getMLRRegressors(100, 2)
mvas
mavs <- head(tail(mvas, 24), 10)
mvas <- head(tail(mvas, 24), 10)
fits <- trainMVAs(mvas = mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
mvas <- getMLRRegressors(100, 2)
mvas
mvas <- head(tail(mvas, 14), 7)
mvas
fits <- trainMVAs(mvas = mvas)
getLearnerParamSet("regr.glm")
getLearnerParamSet("regr.lm")
getLearnerParamSet("regr.mars")
getModelInfo
library(caret)
getLearnerParamSet("regr.mars")
getModelInfo("mars")
getModelInfo("mar)
"0"
getModelInfo("mar")
getModelInfo("ma")
names(getModelInfo("ma"))
getLearnerParamSet("regr.mars")
getLearnerParamSet("regr.mob")
getLearnerParamSet("regr.pcr")
tmp <- getLearnerParamSet("regr.pcr")
tmp$pars
tmp$pars$method
tmp$pars$method$cnames
tmp$pars$method$len
tmp$pars$method$values
names(tmp$pars$method$values)
paste(names(tmp$pars$method$values), collapse = ", ")
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
tmp$pars
par
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
mvas <- getMLRRegressors(100, 2)
mvas
mvas <- tail(mvas, 7)
mvas
fits <- trainMVAs(mvas = mvas)
tmp <- getLearnerParamSet("regr.plsr")
tmp
tmp <- getLearnerParamSet("regr.pcr")
tmp
tmp <- getLearnerParamSet("regr.plr")
tmp <- getLearnerParamSet("regr.rvm")
tmp
getModelInfo("rvm")
tmp <- getModelInfo("rvm")
tmp
tmp$rvmPoly
tmp$rvmPoly$parameters
tmp <- getLearnerParamSet("regr.rvm")
tmp
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
mvas <- getMLRRegressors(100, 2)
fits <- trainMVAs(mvas = mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas = mvas)
length(fits)
length(mvas)
names(mvas)
mvas
mvas[!mvas %in% names(fits)]
names(fits)
mvas %in% names(fits)
length(mvas %in% names(fits))
mvas <- c("glm", "randomForest")
tmp <- trainMVAs(mvas)
names(tmp)
showMem(fits)
tests <- testMVAs(fits)
perfs <- perfMVAs(tests)
tests
source('~/Documents/mva/performanceAnalysis.R')
perfs <- perfMVAs(tests)
source('~/Documents/mva/performanceAnalysis.R')
perfs <- perfMVAs(tests)
source('~/Documents/mva/performanceAnalysis.R')
perfs <- perfMVAs(tests)
replicate(n, 10)
replicate(10, 10)
var(replicate(10, 10))
source('~/Documents/mva/performanceAnalysis.R')
perfs <- perfMVAs(tests)
source('~/Documents/mva/performanceAnalysis.R')
perfs <- perfMVAs(tests)
plotResults(perfs)
source('~/Documents/mva/mlrBase.R')
mvas <- getMLRRegressors(100, 2)
mvas
plotResults(runMVAs(mvas))
source('~/Documents/mva/mlrBase.R')
plotResults(runMVAs(mvas))
source('~/Documents/mva/results.R')
plotResults(runMVAs(mvas))
source('~/Documents/mva/results.R')
perfs
source('~/Documents/mva/results.R')
plotResults(perfs)
perfs
source('~/Documents/mva/results.R')
plotResults(perfs)
source('~/Documents/mva/results.R')
plotResults(perfs)
perfs$featureless
source('~/Documents/mva/performanceAnalysis.R')
perfs <- runMVAs(mvas)
tests <- runMVAs(mvas, stopAfterTest = T)
tests
source('~/Documents/mva/performanceAnalysis.R')
perfs <- perfMVAs(tests)
source('~/Documents/mva/performanceAnalysis.R')
perfs <- perfMVAs(tests)
source('~/Documents/mva/performanceAnalysis.R')
source('~/Documents/mva/performanceAnalysis.R')
perfs <- perfMVAs(tests)
source('~/Documents/mva/performanceAnalysis.R')
perfs <- perfMVAs(tests)
source('~/Documents/mva/performanceAnalysis.R')
perfs <- perfMVAs(tests)
source('~/Documents/mva/performanceAnalysis.R')
perfs <- perfMVAs(tests)
perfs
getListEntries(perfs, "isGood")
plotResults(perfs)
source('~/Documents/mva/results.R')
plotResults(perfs)
source('~/Documents/mva/results.R')
plotResults(perfs)
source('~/Documents/mva/results.R')
plotResults(perfs)
source('~/Documents/mva/results.R')
plotResults(perfs)
source('~/Documents/mva/results.R')
plotResults(perfs)
source('~/Documents/mva/results.R')
plotResults(perfs)
source('~/Documents/mva/results.R')
source('~/Documents/mva/performanceAnalysis.R')
perfs$bartMachine$residuals
perfs$bartMachine$residuals$counts
perfs$bartMachine$residuals$pts
sample(perfs$bartMachine$residuals$pts, size = 10)
source('~/Documents/mva/performanceAnalysis.R')
source('~/Documents/mva/runner.R')
createData("comm")
setData("comm")
fits <- trainMVAs(mvas)
fits
mvas <- getMLRRegressors()
perfs <- runMVAs(mvas)
setData("comm")
testdata
createData("comm")
source('~/Documents/mva/runner.R')
createData("comm")
traindata
help(assign)
help(rm)
source('~/Documents/mva/runner.R')
createData("comm")
setData()
fits <- trainMVAs(mvas)
source('~/Documents/mva/runner.R')
fits <- trainMVAs(mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas)
source('~/Documents/mva/mlrBase.R')
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas)
source('~/Documents/mva/mlrBase.R')
source('~/Documents/mva/mlrBase.R')
mvas <- getMLRRegressors(ncols = 150)
fits <- trainMVAs(mvas)
source('~/Documents/mva/mlrBase.R')
fits <- trainMVAs(mvas)
rm(list=ls())
source('~/Documents/mva/runner.R')
mvas <- getMLRRegressors(ncols = 150)
fits <- trainMVAs(mvas)
setData("fb")
fits <- trainMVAs(mvas)
source('~/Documents/mva/runner.R')
mvas
source('~/Documents/mva/loadData.R')
source('~/Documents/mva/runner.R')
createData("rat")
traindata
plot(traindata$TARGET~traindata$x)
fits <- trainMVAs(mvas = mas)
fits <- trainMVAs(mvas = mvas)
source('~/Documents/mva/mlrBase.R')
mvas <- getMLRRegressors()
source('~/Documents/mva/mlrBase.R')
mvas <- getMLRRegressors()
mvas
fits <- trainMVAs(mvas = mvas)
perfs <- runMVAs(mvas)
plotResults(perfs)
source('~/Documents/mva/results.R')
plotResults(perfs)
source('~/Documents/mva/results.R')
plotResults(perfs)
perfs$cforest
source('~/Documents/mva/performanceAnalysis.R')
perfs <- runMVAs(mvas)
perfs$cforest
plotResults(perfs)
source('~/Documents/mva/results.R')
plotResults(perfs)
source('~/Documents/mva/results.R')
plotResults(perfs)
errors <- getListEntries(mvaPerformances, "errors")
maes   <- getVectorEntries(errors, "mae")
mvaPerformances <- perfs
errors <- getListEntries(mvaPerformances, "errors")
maes   <- getVectorEntries(errors, "mae")
maes
sval <- order(maes)
svals
sval
maes[sval]
loc("RRF", maes[sval])
loc("RRF", names(maes[sval]))
source('~/Documents/mva/results.R')
plotResults(perfs)
source('~/Documents/mva/results.R')
plotResults(perfs)
source('~/Documents/mva/results.R')
plotResults(perfs)
source('~/Documents/mva/performanceAnalysis.R')
ifile    <- file.path(datadir, "yearpredict.dat")
datadir <- "~/Documents/mva/data"
ifile    <- file.path(datadir, "yearpredict.dat")
ifile
pdata    <- fread(ifile, data.table = F, stringsAsFactors = F)
datadir <- "~/Documents/mva/data/yearpredict"
pdata    <- fread(ifile, data.table = F, stringsAsFactors = F)
ifile
ifile    <- file.path(datadir, "yearpredict.dat")
pdata    <- fread(ifile, data.table = F, stringsAsFactors = F)
dim(pdata)
head(pdata)
source('~/Documents/mva/loadData.R')
createData("year")
source('~/Documents/mva/loadData.R')
createData("year")
dim(traindata)
colnames(traindata)
mvas
mvas <- "xgboost"
fits <- trainMVAs(mvas = mvas)
source('~/Documents/mva/mlrBase.R')
fits
tests <- testMVAs(fits)
tets
tests
perfs <- perfMVAs(tests)
source('~/Documents/mva/performanceAnalysis.R')
perfs <- perfMVAs(tests)
plotResults(perfs)
source('~/Documents/mva/webscrape/scrapeGoogleImages.R')
install.packages("rvest")
source('~/Documents/mva/webscrape/scrapeGoogleImages.R')
source('~/Documents/mva/webscrape/scrapeGoogleImages.R')
